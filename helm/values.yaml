# Number of replicas for the Vault deployment
replicaCount: 1

# Image configuration for the Vault server
image:
  repository: trial4w4crx.jfrog.io/vault-repo/vault-server
  tag: "latest"
  pullPolicy: IfNotPresent

# Service configuration for accessing Vault
service:
  type: NodePort  # Change to LoadBalancer for cloud environments
  port: 8200      # The port exposed by the service
  nodePort: 30805 # This should match the one in your service.yaml

# Vault addresses for internal and external access
vault:
  addr: "https://192.168.49.2:30805"  # Set to the correct external IP and port
  externalAddr: "https://192.168.49.2:30805"
  clusterAddr: "https://vault-0.vault-internal:8201"  # Use internal DNS for Raft cluster


# Storage configuration for Vault
storage:
  backend: "raft"  # Use "file" for non-HA
  path: "/vault/data"

# SSL certificate paths
certificates:
  tlsCrtPath: "/vault/certs/tls.crt"
  tlsKeyPath: "/vault/certs/tls.key"

# Security context for the Vault server
server:
  securityContext:
    runAsUser:  1000
    fsGroup: 1000
    runAsNonRoot: true

  # Init container to fix permissions on the data directory
  extraInitContainers:
    - name: fix-permissions
      image: busybox
      command: [ "sh", "-c", "chown -R 1000:1000 /vault/data && chmod -R 770 /vault/data" ]
      securityContext:
        runAsUser:  0
      volumeMounts:
        - name: data
          mountPath: /vault/data

  volumeMounts:
    - mountPath: /vault/data
      name: data

# Persistent volume configuration
volumes:
  - name: data
    persistentVolumeClaim:
      claimName: vault-pvc # Ensure PVC exists in your deployment