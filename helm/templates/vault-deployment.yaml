apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      containers:
      - name: vault
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        env:
        - name: VAULT_ADDR
          value: "{{ .Values.vault.addr }}"  
        - name: VAULT_EXTERNAL_ADDR
          value: "{{ .Values.vault.externalAddr }}"  

        volumeMounts:
        - name: vault-config
          mountPath: /etc/vault.d
          readOnly: false  # Config should be read-only
        - name: vault-ssl-cert
          mountPath: /vault/certs
          readOnly: true  
        - name: vault-data
          mountPath: /vault/data  

        command: ["/bin/sh", "-c"]
        args:
          - vault server -config=/etc/vault.d/vault.hcl  # Use the correct config path

        securityContext:
          capabilities:
            add:
              - IPC_LOCK  

      volumes:
      - name: vault-config
        configMap:
          name: vault-config
        #persistentVolumeClaim:
        #  claimName: vault-pvc  # âœ… Now using PVC instead of ConfigMap
      - name: vault-ssl-cert
        secret:
          secretName: vault-ssl-cert  
      - name: vault-data
        persistentVolumeClaim:
          claimName: vault-pvc  
      imagePullSecrets:
      - name: jfrog-registry-secret  
